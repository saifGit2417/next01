below topic we covered while learning from code evolution

1-routing

2-nested routing

3-dynamic routes

4-nested dynamic routes

5-catch all segments . creating slug route [...slug] > docs / after docs whatever you write you can access it as route
optional catch all segments , [[...slug]]

6-create private folders not available as routes > _lib > start folder name with '_' to make it private

7-route grouping (auth) > for ex creating auth folder to mov login , signUp/register , forgot-password to group in code base

create auth folder name wrapped inside () so while making file based route it will not considered as route
{auth}/register|login|forgotPassword

8- global layouts - v14
9- nested layouts - v15
10 - group layout - v16 > (under-this)>create new layout so now layout is only applied to files/folders under this

11-nested layout is layout for specific route file

12-group layout is layout for 2 files only if there is total three group route but you want a layout only for two folders then this group layout will be help full

13 - meta data , title and description of meta data > this is mostly theory used in SEO , prepare this theory seperately

14 -  component navigation - v-19 <Link> component with href attribute to navigate between routes using UI

15 - active links styling > how to find which link is in active status

16 - routing/navigating programmatically > using useRouter method just like useNavigate

17-templates > how they are different from layout , but served same purpose > how it stores state values are not preserved like layouts  after changing child from it
whole code will be same just need to change file name from layout > to > template 
read theory for layout and templates for interview

types of files we have gone through
page.tsx
not-found.tsx
layout.tsx
template.tsx

loading.tsx > by this file name it will automatically serve as loader , will appear and automatically disappear based on req call time required 

error.tsx > this file will load when any error happened